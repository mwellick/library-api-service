services:
  library_api:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8001:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND = redis://redis:6379
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  db:
    image: postgres:alpine3.19
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA


  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A library_service worker -l info -P gevent
    depends_on:
      - db
      - redis
      - library_api
    restart: on-failure
    env_file:
      - .env


  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A library_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - db
      - redis
      - library_api
    restart: on-failure
    env_file:
      - .env


volumes:
  my_db: